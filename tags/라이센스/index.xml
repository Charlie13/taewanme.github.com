<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>라이센스 on taewan.kim 블로그</title>
    <link>http://taewan.kim/tags/%EB%9D%BC%EC%9D%B4%EC%84%BC%EC%8A%A4/</link>
    <description>Recent content in 라이센스 on taewan.kim 블로그</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 15 Jan 2019 09:28:14 +0900</lastBuildDate>
    
	<atom:link href="http://taewan.kim/tags/%EB%9D%BC%EC%9D%B4%EC%84%BC%EC%8A%A4/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>함수 표기법에서 세미콜론로 변수와 파라미터 구분</title>
      <link>http://taewan.kim/post/function_in_semicolon/</link>
      <pubDate>Tue, 15 Jan 2019 09:28:14 +0900</pubDate>
      
      <guid>http://taewan.kim/post/function_in_semicolon/</guid>
      <description>수학에서 함수를 표현하는 여러 방법이 있습니다. $f(x)$, $f\colon X\to Y$와 ${\displaystyle x\mapsto f(x).}$ 같은 방식으로 함수를 표현합니다. 복잡한 수식에서 함수를 단순하게 표기함으로써 수식을 단순하게 유지할 수 있습니다. 최근에 &amp;ldquo;딥러닝 제대로 시작하기&amp;rdquo; 책에서 약간 다른 표기법을 발견하고 그 의미를 획인해 보았습니다. &amp;ldquo;딥러닝 제대로 시작하기&amp;rdquo; 2장에서는 우도함수를 다음과 같이 표기합니다.
$$ L(w) \equiv \prod_{n=1}^{N}p(d_n|x_n;w) = \prod_{n=1}^{N}\{y(x_n;w)\}^{d_n}\{1-y(x_n;w)\}^{1-d_n}
$$ 
조건부 확률과 출력 함수를 표현을 다음과 같이 표현하고 있습니다.
 $$p(d_n|x_n;w)$$ $$y(x_n;w)$$
 위 표현식에서 세미콜론은 파리미터와 변수를 구분하는 역할을 합니다.</description>
    </item>
    
    <item>
      <title>오라클 자바 라이센스 정리: Oracle Java SE Subscription</title>
      <link>http://taewan.kim/post/oracle_java_subscription/</link>
      <pubDate>Thu, 15 Nov 2018 09:28:14 +0900</pubDate>
      
      <guid>http://taewan.kim/post/oracle_java_subscription/</guid>
      <description>오라클 자바 서브스크립션(Oracle Java SE Subscription) 2019년 1월부터 Oracle Java SE Subscription(이하 Java Subscription)이 시행됩니다. 현재 운영중인 자바 시스템에 Java Subscription을 구독할지를 결정을 하기 위해서는 여러가지 판단 근거가 필요합니다. 내 시스템에 Java Subscription이 정말 필요한지, 2019년 1월까지 바로 결정을 해야 하는 것인지, Subscription 구독 결정을 시간을 두고 결정할 수 있는 것인지, Java Subscription의 대상 범위가 어디까지인지, 개발자 컴퓨터와 테스트 서버도 Java Subscription에 포함 시켜야 하는지, 오라클 솔루션에 포함된 Java를 사용해도 되는지, 기술 지원이 제공되는 Java 버전은 무엇인지, Java SE 최신 Update를 쓰면 정말 좋은 것인지 등 여러 가지를 고민해야 합니다.</description>
    </item>
    
    <item>
      <title>자바의 새로운 도약: OpenJDK(Feat. Oracle JDK Subscription) </title>
      <link>http://taewan.kim/post/openjdk/</link>
      <pubDate>Sat, 20 Oct 2018 09:28:14 +0900</pubDate>
      
      <guid>http://taewan.kim/post/openjdk/</guid>
      <description>최근에 자바는 OpenJDK를 중심으로 빠르게 변화하고 있습니다. 올해부터 OpenJDK는 일 년에 두 번 3월과 9월에 새 버전을 공개합니다. 점차 OpenJDK 개발에 참여하는 기관도 늘어나고 있습니다. 이제 OpenJDK 개발에 참여하는 인증 기관(기업)은 15개에 달합니다.1 또한 OpenJDK 소스를 기반으로 GraalVM과 같은 독특한 기능을 갖춘 새로운 자바가 만들어지고 있습니다. 예전에 자기 환경에 맞는 WAS를 선택했던 것처럼, 내 환경에 맞는 Java를 선택하고 사용하는 Java 다양성 시대로 진입하고 있습니다. 빠른 버전 업그레이드, OpenJDK에 참여하는 조직 확대 및 다양한 Java의 등장과 같은 특징을 통해서 자바는 빠르게 변하는 환경에 신속하게 적응하는 역량을 확보하고 있습니다.</description>
    </item>
    
  </channel>
</rss>