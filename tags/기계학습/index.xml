<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>기계학습 on taewan.kim 블로그</title>
    <link>http://taewan.kim/tags/%EA%B8%B0%EA%B3%84%ED%95%99%EC%8A%B5/</link>
    <description>Recent content in 기계학습 on taewan.kim 블로그</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 07 Oct 2018 19:59:47 +0900</lastBuildDate>
    
	<atom:link href="http://taewan.kim/tags/%EA%B8%B0%EA%B3%84%ED%95%99%EC%8A%B5/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Docker Image: 파이썬 기반 머신러닝 학습용 이미지</title>
      <link>http://taewan.kim/docs/docker4ml/</link>
      <pubDate>Sun, 07 Oct 2018 19:59:47 +0900</pubDate>
      
      <guid>http://taewan.kim/docs/docker4ml/</guid>
      <description>파이썬으로 데이터를 분석하고 머신러닝을 수행하기 위해서 필요한 환경을 Docker 이미지 &amp;lsquo;pyml&amp;lsquo;을 만들어 운영하고 있습니다. 컴퓨터에 Docker가 설치되어 있다면 바로 Docker 이미지를 다운받아 사용할 수 있습니다.
&amp;lsquo;pyml&amp;rsquo; 더커 이미지는 주기적으로 업데이트되며 docker hub 레파지토리에서 운영됩니다.
 https://hub.docker.com/r/taewanme/pyml/  이 문서에서는 &amp;lsquo;pyml&amp;rsquo; 더커 이미지의 주요 정보와 설치 방법에 대한 최신 정보를 제공하겠습니다.
pyml Docker 최신 정보 pyml Docker 이미지 버전 pyml Docker 이미지 버전은 다음 URL의 Tags 페이지에서 확인 할 수 있습니다.</description>
    </item>
    
    <item>
      <title>다차원 텐서 Transpose와 Reshape</title>
      <link>http://taewan.kim/post/transpose_reshape/</link>
      <pubDate>Wed, 22 Aug 2018 23:28:14 +0900</pubDate>
      
      <guid>http://taewan.kim/post/transpose_reshape/</guid>
      <description>CNN과 같은 이미지 데이터를 다룰 때 입력 데이터로 4차원 텐서를 다룹니다. 이 4차원 데이터는 (image 수, channel 수, Height , Width)와 같은 구조를 갖습니다. 데이터를 전처리하는 과정에서 Channel First인 텐서를 Channel Last 텐서로 변형해야 하는 상황이 발생했습니다. 처음에 4차원 구조는 상상하기도 어려운데 4차원 텐서를 전치하라는 것은 어떤 의미인지 난감했습니다.
문제의 시작: Channel First를 Channel Last로 변환 파이토치로 CIFAR10 데이터셋을 읽어와서 대상 이미지를 Mathplotlib의 plt.imshow() 함수로 출력하는 작업을 진행했습니다.
# 변환기 파이프라인  transform = transforms.</description>
    </item>
    
    <item>
      <title>Matplotlib 한글 폰트 설정</title>
      <link>http://taewan.kim/post/matplotlib_hangul/</link>
      <pubDate>Wed, 08 Aug 2018 16:28:14 +0900</pubDate>
      
      <guid>http://taewan.kim/post/matplotlib_hangul/</guid>
      <description>파이썬으로 데이터 시각화를 할 때 &amp;ldquo;Matplotlib&amp;rdquo;을 주로 사용합니다. 최근에 Bokeh나 seaborn와 같은 라이브러리를 사용하기도 하지만, IPython에서 작업할 때 주로 Matplotlib를 선호합니다.
최신의 사용이 편리하고 우수한 다른 라이브러리가 있음에도 Matplotlib를 선호하는 이유는 마지막 실행 결과를 보관하는 기능 때문입니다. Jupyter 파일을 github과 같은 레파지터리에 올려 놓아도 matplotlib는 마지막 실행 결과를 유지하는 것이 장점입니다. Bokeh는 사용하기 편리하고, API가 직관적이며 화려만 웹 기반 차트 제공합니다. 그러나 Bokeh가 웹 기반 기술이다 보니 Jupyter에서 마지막 실행 결과를 보관하지 못하는 한계를 보입니다.</description>
    </item>
    
    <item>
      <title>[til]문일천 교수님 기계학습 개론: 1week-Lec01 </title>
      <link>http://taewan.kim/til/ml_kooc_1week_01/</link>
      <pubDate>Thu, 26 Jul 2018 21:28:14 +0900</pubDate>
      
      <guid>http://taewan.kim/til/ml_kooc_1week_01/</guid>
      <description>강좌 URL: http://kooc.kaist.ac.kr/machinelearning1_17  1주 Lecture 0: Introduction   강좌 동영상       최근 인공지능은 어디에서나 쓰이는 기술 요소  인공지능은 어디에서나 쓰이는 기술 요소 이메일 스팸필터 기능 SNS의 친구 추천 기능 동영상 재생 추천 기능 자동차 번호판 인식 기능 대규모 생산 공정에서의 품질 관리 적재적소에 물품을 운송하는 물류 시스템 군대의 자동화 무기 재난 대응을 위한 로봇    지능이란?
 지속적인 경험 축적을 통해서 어떠한 행동 및 의사 결정을 점점 더 잘 할 수 있다면 이러한 학습을 하는 대상은 지능이 있다고 말할 수 있음.</description>
    </item>
    
    <item>
      <title>머신러닝 용어: Example, Sample &amp; Data Point</title>
      <link>http://taewan.kim/post/sample_example/</link>
      <pubDate>Wed, 18 Jul 2018 19:59:47 +0900</pubDate>
      
      <guid>http://taewan.kim/post/sample_example/</guid>
      <description>머신러닝을 공부하면서 굉장히 생소하게 느껴졌던 용어가 몇 개 있습니다. 그 중에서 가장 어색했던 용어는 데이터셋의 개별 데이터를 표현하는 용어였습니다. 일반적으로 머신러닝 데이터셋의 개별 데이터를 다음과 같은 용어로 표현합니다.
 Example Sample Instance Data Point  문서를 번역하거나 정리하는 과정에서 위 용어를 어떻게 처리해야 할지가 항상 고민이었습니다. 개별 데이터를 왜 이렇게 표현하는지 제 개인적인 느낌을 정리해 보겠습니다.
Example과 Sample  The MNIST database of handwritten digits, available from this page, has a training set of 60,000 examples, and a test set of 10,000 examples.</description>
    </item>
    
    <item>
      <title>[20180707]&#39;파이썬 라이브러리를 활용한 머신러닝&#39; 1장</title>
      <link>http://taewan.kim/til/plwml-01/</link>
      <pubDate>Sat, 07 Jul 2018 21:28:14 +0900</pubDate>
      
      <guid>http://taewan.kim/til/plwml-01/</guid>
      <description>1장에서는 머신러닝의 기본 개념과 Scikit-learn에 대한 간략한 소개로 시작합니다. 또한 이 책에서 다룰 주요 환경에 대해 소개합니다. 마지막으로 KNN으로 붓꽃을 분류하는 예제를 통해서 데이터 수집, 적재, 탐색 및 학습의 과정을 소개합니다. 머신러닝의 가장 기본적인 용어와 접근법에 대한 기초적인 이해를 전달하는 것을 목표로합니다.
1장의 예제 코드와 실행 결과는 다음 URL에서 확인할 수 있습니다. - https://github.com/taewanme/notebooks4til/blob/master/MLWithPythonLibraries/ch01.ipynb
1장 구성 전에 26페이지 정도 분량으로 기계학습이란 무엇이고 이 책에서 다루는 환경에 대하여 소개합니다. 붓꽃을 분류하는 첫 번째 예제로 간단한 지도학습을 진행하는 방식을 소개합니다.</description>
    </item>
    
    <item>
      <title>Docker Image: 파이썬 기반 머신러닝 학습용 이미지 </title>
      <link>http://taewan.kim/post/python_env_for_machine_learning/</link>
      <pubDate>Fri, 06 Jul 2018 19:59:47 +0900</pubDate>
      
      <guid>http://taewan.kim/post/python_env_for_machine_learning/</guid>
      <description>파이썬을 기반으로 머신러닝이나 딥러닝 작업을 진행할 때 가장 귀찮고 꺼려지는 작업은 기본 환경을 준비하는 과정입니다. 파이썬 기본 환경을 효과적으로 관리하기 위해서 Docker Image 형태로 PYML을 만들었습니다. PYML은 텐서플로우, 파이토치, 케라스 및 Scikit-Learn을 활용하여 데이터를 분석할 수 있는 환경이며 UI로 IPython을 사용합니다.
taewanme/pyml 컨테이너 이미지 pyml 더커 이미지는 docker hub에 자동 빌드 프로젝트 형태로 배포되어 있습니다. pyml을 관리하는 레파지토리 주소는 다음 URL과 같습니다.
 https://hub.docker.com/r/taewanme/pyml/  2018년 7월 5일 현재 최신 버전은 0.</description>
    </item>
    
    <item>
      <title>CNN, Convolution Neural Network 요약</title>
      <link>http://taewan.kim/post/cnn/</link>
      <pubDate>Thu, 04 Jan 2018 21:28:14 +0900</pubDate>
      
      <guid>http://taewan.kim/post/cnn/</guid>
      <description>Fully Connected Layer1 만으로 구성된 인공 신경망의 입력 데이터는 1차원(배열) 형태로 한정됩니다. 한 장의 컬러 사진은 3차원 데이터입니다. 배치 모드에 사용되는 여러장의 사진은 4차원 데이터입니다. 사진 데이터로 전연결(FC, Fully Connected) 신경망을 학습시켜야 할 경우에, 3차원 사진 데이터를 1차원으로 평면화시켜야 합니다. 사진 데이터를 평면화 시키는 과정에서 공간 정보가 손실될 수밖에 없습니다. 결과적으로 이미지 공간 정보 유실로 인한 정보 부족으로 인공 신경망이 특징을 추출 및 학습이 비효율적이고 정확도를 높이는데 한계가 있습니다. 이미지의 공간 정보를 유지한 상태로 학습이 가능한 모델이 바로 CNN(Convolutional Neural Network)입니다.</description>
    </item>
    
    <item>
      <title>신경망 W 행렬 표기법: &#39;ij&#39;/&#39;ji&#39; 의 차이점?</title>
      <link>http://taewan.kim/post/wij_and_wji/</link>
      <pubDate>Sat, 23 Dec 2017 21:28:14 +0900</pubDate>
      
      <guid>http://taewan.kim/post/wij_and_wji/</guid>
      <description>제가 처음에 딥러닝을 학습할 때 가장 혼란스러웠던 것은 입력 레이어의 데이터와 가중치 W의 합 표현하는 &amp;ldquo;Z(Weighted Sum)&amp;rdquo; 수식이 문서마다 다른 것이었습니다.
  &amp;lt;식 1&amp;gt;. Z(Weighted Sum)을 표현하는 수식 $$ \begin{align} Z^{[l]} &amp;amp; = W^{[l]T}A^{[l-1]} &amp;amp; (1) \\
Z^{[l]} &amp;amp; = W^{[l]}A^{[l-1]} &amp;amp; (2) \end{align} $$   &amp;lt;식 1&amp;gt;의 (1)과 (2)는 다른 수식임에도 어떤 자료는 (1)과 같이 표현하고 어떤 자료는 (2)와 같이 표현합니다. &amp;lt;식 1&amp;gt; 표기법의 각 요소는 다음과 정리할 수 있습니다.</description>
    </item>
    
    <item>
      <title>딥러닝을 위한 Norm, 노름</title>
      <link>http://taewan.kim/post/norm/</link>
      <pubDate>Fri, 15 Dec 2017 21:28:14 +0900</pubDate>
      
      <guid>http://taewan.kim/post/norm/</guid>
      <description>기계학습 자료에서 간혹 Norm과 관련된 수식이나 표기법을 나오면 당황스러울 때가 있습니다. 선형대수에 익숙하지 않다면 Norm이 이상하게 보일 수 있습니다. 본 문서에서는 인공신공망과 기계학습 일고리즘에서 사용되는 Norm을 이해하는 것을 목표로 최소한도의 Norm 개념을 정리합니다.
일반적으로 딥러닝에서 네트워크의 Overfitting(과적합) 문제를 해결하는 방법으로 다음과 같은 3가지 방법을 제시합니다.
 더 많은 데이터를 사용할 것 Cross Validation Regularization  더 이상 학습 데이터를 추가할 수 없거나 학습 데이터를 늘려도 과적합 문제가 해결되지 않을 때에는 3번 Regularization을 사용해야 합니다.</description>
    </item>
    
    <item>
      <title>선형회귀 MSE 오차함수 미분 및 코드 구현</title>
      <link>http://taewan.kim/post/cost_function_derivation/</link>
      <pubDate>Tue, 09 Aug 2016 16:28:14 +0900</pubDate>
      
      <guid>http://taewan.kim/post/cost_function_derivation/</guid>
      <description>지도학습의 선형회귀 모델은 비용 함수로 MSE(Mean squared error, 평균 제곱 오차) 사용합니다. MSE를 사용하여 가장 간단한 선형회귀 모델을 학습시키는 알고리즘을 구현해 보겠습니다.
이 문서에서는 여러 수식을 사용합니다. 수식에서 스칼라, 벡터, 행렬을 다음과 같은 표기법을 사용할 것입니다.
 $w$: 스칼라, 소문자 표기는 스칼라를 의미합니다. 예제에서는 가중치 1개를 의미합니다.
 $\boldsymbol{w}$: 벡터, 소문자 볼츠체는 벡트를 이미합니다. $W$: 행렬, 대문자는 행렬(Matrix)을 의미합니다.  본문에서 $\theta$와 $\boldsymbol{w}$는 모두 가중치 벡터를 의미합니다.
1. 지도학습이란? 지도학습의 데이터는 사례와 라벨로 구성됩니다.</description>
    </item>
    
  </channel>
</rss>