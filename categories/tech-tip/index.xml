<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tech Tip on taewan.kim 블로그</title>
    <link>http://taewan.kim/categories/tech-tip/</link>
    <description>Recent content in Tech Tip on taewan.kim 블로그</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 05 Sep 2017 16:50:36 +0900</lastBuildDate>
    
	<atom:link href="http://taewan.kim/categories/tech-tip/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Fork된 Git 레파지토리에 원본 레파지토리 업데이트</title>
      <link>http://taewan.kim/post/updating_fork/</link>
      <pubDate>Tue, 05 Sep 2017 16:50:36 +0900</pubDate>
      
      <guid>http://taewan.kim/post/updating_fork/</guid>
      <description>Github을 사용할 때 fork 레파지토리를 만들어 코드 변경 작업을 수행하는 것이 일반적입니다. Fork 된 레파지토리가 너무 오래되거나, 원본 레파지토리 병합 요청(&amp;rdquo;pull request&amp;rdquo;)이 반려되는 경우, Fork 된 레파지토리에 원본 레파지토리 변경 사항을 적용해야 하는 경우가 있습니다. Fork 된 레파지토리에 원본 레파지토리 변경 사항을 반영하는 방법을 정리합니다.
github에서 Fork를 왜하는가? github 등 git 서비스에서 commit 권한이 없는 레파지토리를 테스트하거나 대상 레파지토리을 변경하는 목적으로 fork 기능을 사용합니다. 다른 계정(Account) 혹은 조직(Organization)의 레파지토리를 fork 하면 해당 레파지토리는 사용자의 계정으로 복제됩니다.</description>
    </item>
    
    <item>
      <title>ssh config 설정 방법</title>
      <link>http://taewan.kim/post/ssh_config/</link>
      <pubDate>Sun, 05 Mar 2017 12:07:16 +0900</pubDate>
      
      <guid>http://taewan.kim/post/ssh_config/</guid>
      <description>하나의 컴퓨터에서 복수의 SSH 키를 사용할 경우 SSH 접속에 사용하는 ssh 명령이 복잡해지는 단점이 있습니다. 이러한 복잡성은 SSH config 파일을 이용하여 해결할 수 있습니다.
이 문서는 SSH 키 파일을 이미 갖고있는 것을 전제로 합니다. 아직 SSH 키를 생성하지 않은 상태라면, 다음 문서를 참조하시기 바랍니다.
 윈도우, 리눅스, 맥에서 ssh 보안키 생성  ssh 명령 기본 사용법 ssh 명령의 기본 사용법은 다음과 같습니다.
 ssh 사용자ID@서버명  다음과 같은 명령을 내릴 때 ssh 명령은 &amp;ldquo;~/.</description>
    </item>
    
    <item>
      <title>윈도우, 리눅스, 맥에서 ssh 보안키 생성</title>
      <link>http://taewan.kim/post/ssh_key/</link>
      <pubDate>Sat, 04 Mar 2017 12:07:16 +0900</pubDate>
      
      <guid>http://taewan.kim/post/ssh_key/</guid>
      <description>클라우드 서비스로 만든 가상 서버에 안전한 로그인을 하기 위해서 SSH(Secure Shell) 프로토콜을 사용하는 것이 일반적입니다. SSH 프로토콜은 안전하지 못한 네트워크에서 강력한 인증과 안전한 통신을 가능하게 합니다. SSH 프로토콜에서 패스워드 입력없이 로그인하기 위해서는 인증서가 필요하며, 기본 포트는 22번입니다.
SSH 프로토콜에 대한 자세한 내용은 다음 문서를 참조하시기 바랍니다.
 오픈 튜토리얼: SSH 원격제어 오픈 튜토리얼: SSH 키  이 문서에서는 다음 내용을 다루겠습니다.
 운영체제별 SSH 키 생성 방법 (window, linux, osx) SSH 키 설치 방법 ssh config를 이용한 ssh 명령 단순하게 사용하기  인증서 생성 방법 각 운영체제(Linux, OSX, Window)의 SSH 키 생성 방법에 대하여 정리하겠습니다.</description>
    </item>
    
    <item>
      <title>마크다운 사용법 - Quick Start</title>
      <link>http://taewan.kim/post/markdown/</link>
      <pubDate>Mon, 04 Apr 2016 13:47:07 +0900</pubDate>
      
      <guid>http://taewan.kim/post/markdown/</guid>
      <description>taewan.kim은 대부분의 내용을 markdown으로 관리하고 있습니다. markdown은 직관적이고 간단한 문법으로 컨텐츠 관리에 매우 효과적입니다. markdown에서 주로 이용되는 테그는 15개정도 입니다. 혼동되는 주요 테그를 정리하겠습니다.
 목차   헤더 수평선 텍스트 출력 텍스트 강조 인용 목록 코드 테이블 링크 이미지 주석 각주   헤더  (top) H1 ~ H6까지 테그를 #으로 표현
# 헤더 스타일 (h1) ## 헤더 스타일 (h2) ### 헤더 스타일 (h3) #### 헤더 스타일 (h4) ##### 헤더 스타일 (h5) ###### 헤더 스타일 (h6)   출력 결과  헤더 스타일 (h1) 헤더 스타일 (h2) 헤더 스타일 (h3) 헤더 스타일 (h4) 헤더 스타일 (h5) 헤더 스타일 (h6)  효과: 다음과 같은 코드와 동일한 결과가 됨  &amp;lt;h1&amp;gt;헤더 스타일 (h1)&amp;lt;/h1&amp;gt; &amp;lt;h2&amp;gt;헤더 스타일 (h2)&amp;lt;/h2&amp;gt; &amp;lt;h3&amp;gt;헤더 스타일 (h3)&amp;lt;/h3&amp;gt; &amp;lt;h4&amp;gt;헤더 스타일 (h4)&amp;lt;/h4&amp;gt; &amp;lt;h5&amp;gt;헤더 스타일 (h5)&amp;lt;/h5&amp;gt; &amp;lt;h6&amp;gt;헤더 스타일 (h6)&amp;lt;/h6&amp;gt;  수평선  (top)  &amp;lt;hr /&amp;gt;와 동일한 결과를 출력 &amp;rsquo;-&amp;lsquo;, &amp;lsquo;*&amp;lsquo;, &amp;lsquo;_&amp;lsquo;을 세개 이상 나열하면 수평선을 만듦 단락 나누기 용도로 많이 사용.</description>
    </item>
    
    <item>
      <title>오라클 Big Data Lite 설치</title>
      <link>http://taewan.kim/post/installing_bigdatalite/</link>
      <pubDate>Mon, 28 Mar 2016 17:04:26 +0900</pubDate>
      
      <guid>http://taewan.kim/post/installing_bigdatalite/</guid>
      <description>오라클에서는 빅데이터 플랫폼의 테스트와 학습을 효과적으로 지원하는 것을 목표로 Oracle Big Data Lite를 제공합니다. Oracle Big Data Lite는 Cloudera의 최신 CDH와 오라클 연계 솔루션을 하나의 VitrualBox 이미지에 담고 있습니다. 오라클 Big Data Lite는 빅데이터 소프트웨어에 대한 모든 설치와 구성이 완성된 상태로 배포되기 때문에, 하둡이 익숙하지 않은 엔지니어가 Hadoop Eco를 학습하기에 가장 이상적인 시작점입니다.
오라클 Big Data Lite의 메인 페이지의 URL은 다음과 같습니다.
 http://www.oracle.com/technetwork/database/bigdata-appliance/oracle-bigdatalite-2104726.html  오라클 Big Data Lite 버전과 구성 컴포넌트 2016년 2월 현재 오라클 Big Data Lite의 최신 버전은 4.</description>
    </item>
    
    <item>
      <title>remark를 이용한 웹 프리젠테이션</title>
      <link>http://taewan.kim/post/remarkjs/</link>
      <pubDate>Tue, 22 Mar 2016 10:23:15 +0900</pubDate>
      
      <guid>http://taewan.kim/post/remarkjs/</guid>
      <description>PPT를 공유하는 Slideshare 서비스가 있기는 하지만, 웹 상에서 내가 직접 제어와 공유가 가능한 순수 HTML기반의 웹 프리젠테이션에 대한 필요성을 느껴왔씁니다. 오픈소스로 다수의 웹 프리젠테이션 기술 중에서 하나를 선택하라면 remark를 선택하겠습니다.
remark의 장점은 다음과 같습니다.
 순수 HTML 기술이다. 슬라이드 데이터는 Markdown 포멧을 사용한다. PPT의 기본 레이아웃 지원에 충실하다. 사용법이 간단하다. Syntax Highlight 기능을 잘 지원한다. Latex를 지원한다. Graph를 지원한다.  반면 단점을 꼽으라면 Animation 효과가 지원되지 않는다는 것입니다. 개인적으로 Animation 효과보다는 프리젠테이션 구성 지원과 문서 작성 편리성을 중시하는 관계로 제 경우에는 이 단점이 크게 작용하지 않았습니다.</description>
    </item>
    
    <item>
      <title>내 친구 Vagrant를 소개합니다.</title>
      <link>http://taewan.kim/post/vagrant_intro/</link>
      <pubDate>Sat, 06 Feb 2016 20:47:54 +0900</pubDate>
      
      <guid>http://taewan.kim/post/vagrant_intro/</guid>
      <description>Vagrant는 가상화 인스턴스를 관리하는 소프트웨입니다. Vagrant의 실체는 가상 개발 환경을 생성하고 설정하기 위한 주요 가상화 소프트웨어의 고수준 레퍼입니다. Vagrant가 지원하는 가상화 기술은 다음과 같습니다.
 VirtualBox VMware KVM Linux Container(LXC) Docker  Vagrant는 위에서 나열한 프로바이더 기술을 기반으로하여 가상화 인스턴스를 효과적으로 생성하고 관리 일관성을 확보하는 방안을 제공합니다. Vagrant의 가장 매력적인 부분은 가상 인스턴스를 만들고 실행하는 과정이 매우 빠르고 편리하다는 것입니다.
Vagrant의 사전적인 의미는 &amp;ldquo;부랑자&amp;rdquo;/&amp;ldquo;정처없는 사람&amp;rdquo; 이라는 사전적인 의미를 갖습니다. Vagrant는 가상화 이미지를 효과적으로 만들고 테스트하는 유연한 환경이라는 의미에서 명명된 것이라고 생각됩니다.</description>
    </item>
    
    <item>
      <title>Webhook 연동: git 서비스 &#43; jenkins</title>
      <link>http://taewan.kim/post/bitbucket_jenkins_webhook/</link>
      <pubDate>Wed, 03 Feb 2016 14:01:55 +0900</pubDate>
      
      <guid>http://taewan.kim/post/bitbucket_jenkins_webhook/</guid>
      <description>최근에 git 기반의 서비스들(github, bitbucket, gitlab)은 Webhooks 기능을 기본적으로 제공합니다. Webhooks는 해당 git repository에 push, commtit, tag와 같은 이벤트가 발생하면 Jenkins와 같은 CI 서버에 이벤트를 전달하는 기능입니다. Webhooks 이벤트를 전달받은 CI서버는 해당 프로젝트의 빌드 프로세스를 시작하는 방식으로 Git 레파지토리와 CI 서버를 연동하는 방법입니다. Git 레파지토리가 호출하는 Webhooks는 HTTP URL(Restful 서비스)입니다.
Jenkins의 빌드 트리거 Webhooks 기능을 활성화 시키기 위해서 git 서비스에 Jenkins가 제공하는 URL을 등록해야 합니다. Jenkins는 Job의 설정화면의 &amp;ldquo;빌드 트리거&amp;rdquo;에서 git서비스에 등록할 URL을 만들수 있습니다.</description>
    </item>
    
    <item>
      <title>VirtualBox: 호스트에서 게스트 접근 네트웍 설정</title>
      <link>http://taewan.kim/post/virtualbox_network_config/</link>
      <pubDate>Sun, 31 Jan 2016 12:42:43 +0900</pubDate>
      
      <guid>http://taewan.kim/post/virtualbox_network_config/</guid>
      <description>최근에는 VirtualBox 이미지로 테스트 환경을 구성하거나 배포하는 경우가 많아졌습니다. 특히 오라클에서는 초기 테스트 및 교육 목적으로 다수의 VirtualBox 이미지를 배포하고 있습니다. 이렇게 만들어진 이미지를 사용할 경우 사용자는 새로운 기술을 접할 때 경험해야 하는 설치 및 구성에 대한 난제를 해결 할 수 있습니다. 즉 사용자는 새로운 기술의 기능 테스트 및 활용에 집중할 수 있게됩니다.
오라클이 제공하는 VirtualBox 이미지는 Oracle Big Data Lite입니다. Oracle Big Data Lite는 오라클의 빅데이터 소프트웨어 (CHD배포본 + Orale Software)의 최신 구성을 하나의 VirtualBox 이미지에 담아서 제공합니다.</description>
    </item>
    
    <item>
      <title>JBoss Seam 로고의 의미</title>
      <link>http://taewan.kim/post/seam_log/</link>
      <pubDate>Wed, 27 Jan 2016 10:50:36 +0900</pubDate>
      
      <guid>http://taewan.kim/post/seam_log/</guid>
      <description>2008~2009년도에는 JBoss Seam에 몰입했던 시기였습니다. 그 당시에 작성했던 글입니다. 오픈소스를 이해할 때 오픈소스의 이름과 로고가 담고 있는 의미를 이해하는 도움이 됩니다. 오픈소스 이름과 로고를 해석한 사례로 봐 주시면 좋을 것 같습니다. 그럼 2009년으로 돌아가 보겠습니다.
Seam Framework 로고는 어떤 의미일까요? Seam Framework은 기존과 차별되는 독특한 컴포넌트 관리 모델을 제안하고 있습니다. 기존에 Java EE 애플리케이션은 Web 티어와 EJB 티어로 구분되어 있기 때문어 상호간에 참조하기가 어려웠습니다. 웹 에서 EJB 컴포넌트를 참조하기 위해서는 JNDI Lookup과 Casting 작업이 선행되어야 했습니다.</description>
    </item>
    
    <item>
      <title>OS별 bit 확인 방법</title>
      <link>http://taewan.kim/post/os_bit/</link>
      <pubDate>Wed, 27 Jan 2016 10:50:36 +0900</pubDate>
      
      <guid>http://taewan.kim/post/os_bit/</guid>
      <description>2011년 4월 6일에 http://devtainer.blogspot.kr/에서 섰던 글입니다. 추억 팔이로 옮겨 놓습니다. 2011년 추억 속으로&amp;hellip;. - 원문: http://devtainer.blogspot.kr/2011/04/os-bit.html
맥, 리눅스, AIX 운영체제의 bit를 확인하는 방법을 정리해 보았습니다.
Linux 리눅스의 경우 uname 명령어로 간단히 확인 가능 합니다. &amp;ldquo;uname -a&amp;rdquo; 명령어로 현재 운영체제의 비트를 확인할 수 있습니다.
AIX AIX에서는 getconf명령어와 /usr/lib/boot/unix*에 대한 file 명령를 통해서 bit를 확인 할 수 있습니다. 다음은 64비트 운영환경에서 테스트한 결과 입니다. 운영체제가 32비트이면 결과는 32로 표시될 것입니다.
[ ONLINE Mode ]&amp;gt;getconf -a | grep KERN KERNEL_BITMODE: 64 [ ONLINE Mode ]&amp;gt;file /usr/lib/boot/unix* /usr/lib/boot/unix: 64-bit XCOFF executable or object module not stripped /usr/lib/boot/unix_64: 64-bit XCOFF executable or object module not stripped  Mac OS X sysctl명령어로 운영체제 비트 정보를 확인할 수 있습니다.</description>
    </item>
    
    <item>
      <title>Log4J 로깅 비용 계산</title>
      <link>http://taewan.kim/post/log4j_perf/</link>
      <pubDate>Sun, 03 Jan 2016 00:17:44 +0900</pubDate>
      
      <guid>http://taewan.kim/post/log4j_perf/</guid>
      <description>2006년 4월 30일에 이글루스 블로그에서 섰던 글입니다. 추억 팔이로 옮겨 놓습니다. 2006년 추억 속으로&amp;hellip;. - 원문: http://okcode.egloos.com/1892085
기존의 System.out.println()으로 로그를 남길 때 발생하는 문제의 대안으로 Log4J를 요즘 많이 사용한다.
Log4J를 사용하면 OutputStream에서 발생하는 자원독점 문제 해결, logging 레벨 설정을 코드와 분리, 로그 출력 방식 설정 변경 등 다양한 이점을 얻을 수 있다.
그러나 Log4J가 실행될 때 발행하는 비용을 계산해 보면 Log4J를 사용할 때 주의가 필요하다. 무작정 사용하는 것은 WAS 전체에 심각한 문제를 발생시킬 수 있다.</description>
    </item>
    
    <item>
      <title>Tomcat 5.0 ~ 7.0 한글 인코딩 설정</title>
      <link>http://taewan.kim/post/tomcat_encoding/</link>
      <pubDate>Mon, 01 Aug 2011 10:50:36 +0900</pubDate>
      
      <guid>http://taewan.kim/post/tomcat_encoding/</guid>
      <description>2011년 8월 1일에 devtainer.blogspot.kr 에서 섰던 글입니다. 추억 팔이로 옮겨 놓습니다. 2011년 추억 속으로&amp;hellip;. - 원문: http://devtainer.blogspot.kr/2011/08/tomcat-50-70.html
한동안 Tomcat을 사용하지 않다가 오랜만에 사용했더니 인코딩 관련 착각을 해서 한참을 삽질 했습니다. 한글 인코딩에 대하여 간략하게 정리합니다.
톰켓의 기본 인코딩은 ISO-8859-1 입니다. 따라서 한글을 정상적으로 처리하기 위해서는 추가적인 인코딩 설정이 필요합니다. 인코딩 설정은 http get 메서드와 http post 메서드를 개별적으로 설정합니다.
HTTP Get 메서드 인코등 설정  [TOMCAT_HOME]/conf/server.xml 수정 Connector port=&amp;ldquo;8080&amp;rdquo; 엘레먼트에 URIEncoding=&amp;ldquo;UTF-8&amp;rdquo; 속성 추가  &amp;lt;connector port=&amp;quot;8080&amp;quot; protocol=&amp;quot;HTTP/1.</description>
    </item>
    
    <item>
      <title>Glassfish의 asadmin 명령어 한글 깨짐 현상</title>
      <link>http://taewan.kim/post/glassfish_encoding/</link>
      <pubDate>Tue, 05 Apr 2011 21:59:47 +0900</pubDate>
      
      <guid>http://taewan.kim/post/glassfish_encoding/</guid>
      <description>예전 2011년에 devtainer.blogspot.kr 블로그에서 섰던 글 입니다. 추억으로 보관합니다.
원문: http://devtainer.blogspot.jp/2011/04/glassfish-asadmin.html GlassFish를 설치하고 &amp;ldquo;asadmin&amp;rdquo;를 실행하면 한글이 깨지는 현상이 발생합니다. 다음은 GlassFish 3.1을 설치하고 asadmin을 수행한 결과 입니다.
taewan:bin taewankim$ ./asadmin ?????Ϸ??? &amp;quot;exit&amp;quot;??, ?¶??? ?????? ?????? &amp;quot;help&amp;quot;?? ????մϴ?. asadmin&amp;gt; help ??ƿ??Ƽ ???? asadmin(1M) NAME asadmin - Oracle GlassFish Server?? ???? ???? ?۾??? ?????ϱ? ???? ??ƿ??Ƽ?Դϴ?. SYNOPSIS asadmin [--host host] [--port port] [--user admin-user] [--passwordfile filename] [--terse={true|false}] [--secure={false|true}] [--echo={true|false}] [--interactive={true|false}] [--help] [subcommand [options] [operands]] DESCRIPTION Oracle GlassFish Server?</description>
    </item>
    
    <item>
      <title>Seam - 사용자 IPAddress 확인</title>
      <link>http://taewan.kim/post/seam_ip_address/</link>
      <pubDate>Wed, 30 Mar 2011 10:50:36 +0900</pubDate>
      
      <guid>http://taewan.kim/post/seam_ip_address/</guid>
      <description>Seam은 애플리케이션 UI 프레임웍으로 JSF를 사용합니다. JSF는 컴포넌트 기반 프레임웍이고 Seam과 결합하여 완전한 컴포넌트 기반 프레임웍의 모습을 갖추고 있습니다.
Seam 애플리케이션을 개발하다 보면 HttpServletRequest와 HttpSession 객체를 전혀 접근하지 않고 등록된 컴포넌트를 참조하여 사용하게 됩니다. 사용자 등록 폼 정보는 컴포넌트 맵핑 정보를 이용하여 사용하면 되지만 간혹 사용자가 입력하지 않는 별도의 정보를 사용해야 할 수도 있습니다.
가령 어떤 어떤 IP/Host에서 접근하는지 로깅을 남겨야 하거나 게시판에서 게시글의 IP Adress를 저장해야 한다면 어떻게 해야 할까요?</description>
    </item>
    
    <item>
      <title>sudo 사용자 등록 (in CentOS)</title>
      <link>http://taewan.kim/post/sudo_in_centos/</link>
      <pubDate>Wed, 16 Mar 2011 14:01:55 +0900</pubDate>
      
      <guid>http://taewan.kim/post/sudo_in_centos/</guid>
      <description>일반 사용자가 루트 권한을 획득하기 위해서는 su 명령을 사용해야 합니다. 사실 매번 루트 권한을 얻기 위해서 su를 수행하는 것은 불편하죠. Ubunto를 사용할 때 가장 편 리한 명령은 아마도 sudo일 것입니다. sudo는 일반사용자가 루트 권한을 임시적으로 획득하여 특정 명령을 할 수 있도록 합니다.
Ubuntu에서는 처음부터 일반 사용자가 sudo를 사용할 수 있도록 되어 있지만 CentOS &amp;gt;등 다른 리눅스 배포판에서는 sudo를 기본적으로 사용할 수 없도록 되어 있습니다.
[was@centos ~]$ sudo more /etc/sysctl.conf [sudo] password for was: was is not in the sudoers file.</description>
    </item>
    
    <item>
      <title>JUnit 4.x 어노테이션</title>
      <link>http://taewan.kim/post/junit4_annotation/</link>
      <pubDate>Tue, 09 Nov 2010 10:50:36 +0900</pubDate>
      
      <guid>http://taewan.kim/post/junit4_annotation/</guid>
      <description>2010년 11월 9일에 http://devtainer.blogspot.kr/에서 섰던 글입니다. 추억 팔이로 옮겨 놓습니다. 2010년 추억 속으로&amp;hellip;. - 원문: http://devtainer.blogspot.kr/2010/11/junit-4x.html
JUnit4의 주요 어노테이션을 정리해 보았습니다. 별것 아닌것 같아도 막상 사용해 보면 헛갈리기 쉬운것 같습니다. Junit4의 주요 어노테이션은 다음과 같습니다.
Junit 4 테스트 클래스 작성 JUnit4에서는 POJO 형태로 단위 테스트 클래스가 정의 됩니다. 단위 테스트 대상 메소드는 @Test를 통해서 정의 됩니다. 또한 단위 테스트 앞뒤에 초기화와 정리를 수행하는 메소드를 지정할 수 있습니다. 추가적으로 클래스 실행 앞뒤에 초기화와 정리를 수행하는 메서드를 정의 할 수 있습니다.</description>
    </item>
    
    <item>
      <title>Jersey License: CDDL 1.1 &amp; GPL 2</title>
      <link>http://taewan.kim/post/jersey_license_gpl2_cddl1.1/</link>
      <pubDate>Thu, 21 Oct 2010 10:50:36 +0900</pubDate>
      
      <guid>http://taewan.kim/post/jersey_license_gpl2_cddl1.1/</guid>
      <description>2010년 10월 21일에 http://devtainer.blogspot.kr/ 에서 섰던 글입니다. 추억 팔이로 옮겨 놓습니다. 2010년 추억 속으로&amp;hellip;. - 원문: http://devtainer.blogspot.kr/2010/10/jersey.html
RESTFul를 구현할때 Jersey를 많이 사용합니다. 아무래도 JAX-RS 중에서 문서화나 프레임웍 완성도가 가장 높은것은 Jersey라고 생각합니다. (Grizzly 서버와 테스팅 통합 기능이 굉장하죠&amp;hellip;)
그러나 약간 사용하기 애매했던 부분은 라이센스 였습니다. Jersey의 라이센스에 대해서는 Jersey 홈페이지(https://jersey.dev.java.net/)에 다음과 같이 명시하고 있습니다.
 We also use the same two licenses - CDDL 1.1 and GPL 2 with CPE - so, you can pick which one suites your needs better.</description>
    </item>
    
    <item>
      <title>The Power Of The Java:2006 자바원 컨퍼런스 후기</title>
      <link>http://taewan.kim/post/testng/</link>
      <pubDate>Wed, 01 Mar 2006 21:59:47 +0900</pubDate>
      
      <guid>http://taewan.kim/post/testng/</guid>
      <description>10년전 Javaone 컨퍼런스 후기 형식으로 2006년 7월에 마이크로 소프트웨어에 기고했던 기사입니다.
 원본: http://www.zdnet.co.kr/news/news_view.asp?artice_id=00000039153641   &amp;ldquo;자바원 2006&amp;rdquo;은 5월 16일부터 19일까지 나흘 동안 센프란시스코에서 개최되었다. 138개 세션으로 구성된 &amp;ldquo;자바원 2006&amp;rdquo;에는 2 만명의 자바 개발자들은 참가했고, 자바의 신기술들과 다양한 이슈를 공유하는 열정적인 자바 축제로 진행되었다. 나흘간의 진행된 축제의 열기와 분위기를 전달하고자 한다.
  김태완 okcode@gmail.com 필자는 프로자바(www.pro-java.com)의 운영자로 활동하고 있으며, 오픈소스 기반 Rapid Development에 관심을 갖고 있다. 프레임웍을 주제로 하는 새로운 커뮤니티를 기획하고 있으며, 상식이 통하는 고객과 개발자, 관리자가 함께하는 날이 언젠가 올 것이라 간절히 소망하고 있다.</description>
    </item>
    
  </channel>
</rss>